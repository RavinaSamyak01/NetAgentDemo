<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-10T15:56:16 IST" name="NetAgent TaskLog Demo" finished-at="2022-08-10T15:59:26 IST" duration-ms="189487">
    <groups>
    </groups>
    <test started-at="2022-08-10T15:56:16 IST" name="VerifyNoRecords" finished-at="2022-08-10T15:57:10 IST" duration-ms="53631">
      <class name="na_TestScenarios.Scenario1">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:na_TestScenarios.Scenario1@50378a4]" started-at="2022-08-10T15:56:16 IST" name="testMethodName" finished-at="2022-08-10T15:56:16 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void na_TestScenarios.Scenario1.unAssignANyRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="unAssignANyRecord()[pri:0, instance:na_TestScenarios.Scenario1@50378a4]" started-at="2022-08-10T15:56:16 IST" name="unAssignANyRecord" finished-at="2022-08-10T15:57:10 IST" duration-ms="53368" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unAssignANyRecord -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:na_TestScenarios.Scenario1@50378a4]" started-at="2022-08-10T15:57:10 IST" name="getResult" finished-at="2022-08-10T15:57:10 IST" duration-ms="189" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=unAssignANyRecord status=SUCCESS method=Scenario1.unAssignANyRecord()[pri:0, instance:na_TestScenarios.Scenario1@50378a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- na_TestScenarios.Scenario1 -->
    </test> <!-- VerifyNoRecords -->
    <test started-at="2022-08-10T15:57:10 IST" name="GetTotalJobs" finished-at="2022-08-10T15:57:18 IST" duration-ms="7931">
      <class name="na_TestScenarios.Scenario2">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:na_TestScenarios.Scenario2@f68f0dc]" started-at="2022-08-10T15:57:10 IST" name="testMethodName" finished-at="2022-08-10T15:57:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void na_TestScenarios.Scenario2.getTotalJobs() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="getTotalJobs()[pri:0, instance:na_TestScenarios.Scenario2@f68f0dc]" started-at="2022-08-10T15:57:10 IST" name="getTotalJobs" finished-at="2022-08-10T15:57:18 IST" duration-ms="7727" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTotalJobs -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:na_TestScenarios.Scenario2@f68f0dc]" started-at="2022-08-10T15:57:18 IST" name="getResult" finished-at="2022-08-10T15:57:18 IST" duration-ms="197" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTotalJobs status=SUCCESS method=Scenario2.getTotalJobs()[pri:0, instance:na_TestScenarios.Scenario2@f68f0dc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- na_TestScenarios.Scenario2 -->
    </test> <!-- GetTotalJobs -->
    <test started-at="2022-08-10T15:57:18 IST" name="SearchByPickupID" finished-at="2022-08-10T15:58:23 IST" duration-ms="64688">
      <class name="na_TestScenarios.Scenario3">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:na_TestScenarios.Scenario3@1b66c0fb]" started-at="2022-08-10T15:57:18 IST" name="testMethodName" finished-at="2022-08-10T15:57:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void na_TestScenarios.Scenario3.searchByPUID() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="searchByPUID()[pri:0, instance:na_TestScenarios.Scenario3@1b66c0fb]" started-at="2022-08-10T15:57:18 IST" name="searchByPUID" finished-at="2022-08-10T15:58:22 IST" duration-ms="64477" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchByPUID -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:na_TestScenarios.Scenario3@1b66c0fb]" started-at="2022-08-10T15:58:22 IST" name="getResult" finished-at="2022-08-10T15:58:23 IST" duration-ms="206" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchByPUID status=SUCCESS method=Scenario3.searchByPUID()[pri:0, instance:na_TestScenarios.Scenario3@1b66c0fb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- na_TestScenarios.Scenario3 -->
    </test> <!-- SearchByPickupID -->
    <test started-at="2022-08-10T15:58:23 IST" name="SearchAndRejectJob" finished-at="2022-08-10T15:59:26 IST" duration-ms="63200">
      <class name="na_TestScenarios.Scenario4">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:na_TestScenarios.Scenario4@465232e9]" started-at="2022-08-10T15:55:08 IST" name="beforeMethod" finished-at="2022-08-10T15:56:16 IST" duration-ms="68486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:na_TestScenarios.Scenario4@465232e9]" started-at="2022-08-10T15:58:23 IST" name="testMethodName" finished-at="2022-08-10T15:58:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void na_TestScenarios.Scenario4.searchAndRejectJob() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="searchAndRejectJob()[pri:0, instance:na_TestScenarios.Scenario4@465232e9]" started-at="2022-08-10T15:58:23 IST" name="searchAndRejectJob" finished-at="2022-08-10T15:59:26 IST" duration-ms="62925" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.poi.ss.usermodel.Row.getCell(int)" because the return value of "org.apache.poi.ss.usermodel.Sheet.getRow(int)" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.ss.usermodel.Row.getCell(int)" because the return value of "org.apache.poi.ss.usermodel.Sheet.getRow(int)" is null
at netAgent_BasePackage.BaseInit.getData(BaseInit.java:545)
at na_TestScenarios.Scenario4.searchAndRejectJob(Scenario4.java:45)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchAndRejectJob -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:na_TestScenarios.Scenario4@465232e9]" started-at="2022-08-10T15:59:26 IST" name="getResult" finished-at="2022-08-10T15:59:26 IST" duration-ms="260" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchAndRejectJob status=FAILURE method=Scenario4.searchAndRejectJob()[pri:0, instance:na_TestScenarios.Scenario4@465232e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="SendEmail()[pri:0, instance:na_TestScenarios.Scenario4@465232e9]" started-at="2022-08-10T15:59:26 IST" name="SendEmail" finished-at="2022-08-10T15:59:33 IST" duration-ms="7338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendEmail -->
      </class> <!-- na_TestScenarios.Scenario4 -->
    </test> <!-- SearchAndRejectJob -->
  </suite> <!-- NetAgent TaskLog Demo -->
</testng-results>
